{"version":3,"sources":["components/PremadeBurger/PremadeBurger.css","containers/Premade/PremadeBurgers.css","components/PremadeBurger/PremadeBurger.js","containers/Premade/PremadeBurgers.js"],"names":["module","exports","PremadeBurger","props","className","classes","container","burger_name","title","ingredient_div","ingredient_div_label","Object","keys","ingredients","map","ing","key","ingredient_box","burger_price_label","price","preview_burger","Burger","PremadeBurgers","this","burgers","onFetchPremadeBurgers","onInitPurchase","onProceedToCheckout","history","push","setTimeout","premadeBurgers","premadeBurgersArray","entries","e","error","message","loading","Spinner","burger","burgerTitle","burgerIngredients","getBurgerPrice","proceedButtonDiv","ProceedButton","onClick","continueToCheckout","continueToBurgerBuilder","Component","connect","state","dispatch","actions","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,eAAiB,0BAA0B,eAAiB,0BAA0B,qBAAuB,0BAA0B,eAAiB,0BAA0B,YAAc,wBAAwB,mBAAqB,0B,oBCArSD,EAAOC,QAAU,CAAC,cAAgB,wBAAwB,iBAAmB,4B,8IC4B9DC,MAzBf,SAAuBC,GACrB,OACE,yBAAKC,UAAWC,IAAQC,WACtB,wBAAIF,UAAWC,IAAQE,aAAcJ,EAAMK,OAE3C,yBAAKJ,UAAWC,IAAQI,gBACtB,0BAAML,UAAWC,IAAQK,sBAAzB,iBACCC,OAAOC,KAAKT,EAAMU,aAAaC,KAAI,SAACC,EAAKC,GAAN,OACP,IAA3Bb,EAAMU,YAAYE,GAChB,0BAAMX,UAAWC,IAAQY,eAAgBD,IAAKA,GAC3CD,EADH,KACUZ,EAAMU,YAAYE,GAD5B,KAGE,QAEN,wBAAIX,UAAWC,IAAQa,oBAAvB,UACS,oCAAUf,EAAMgB,SAG3B,yBAAKf,UAAWC,IAAQe,gBACtB,kBAACC,EAAA,EAAD,CAAQR,YAAaV,EAAMU,iB,wCCb7BS,E,kLAEGC,KAAKpB,MAAMqB,SAASD,KAAKpB,MAAMsB,0B,yCAGnBV,EAAKI,GACtBI,KAAKpB,MAAMuB,iBACXH,KAAKpB,MAAMwB,oBAAoBZ,EAAKI,GACpCI,KAAKpB,MAAMyB,QAAQC,KAAK,e,8CAEFd,EAAKI,GAC3BI,KAAKpB,MAAMwB,oBAAoBZ,EAAKI,GACpCI,KAAKpB,MAAMyB,QAAQC,KAAK,O,+BAEhB,IAAD,OACFN,KAAKpB,MAAMqB,SACdM,YAAW,WACT,EAAK3B,MAAMsB,0BACV,KAEL,IAIIM,EAJEC,EAAsBT,KAAKpB,MAAMqB,QACnCb,OAAOsB,QAAQV,KAAKpB,MAAMqB,SAASV,KAAI,SAACoB,GAAD,sBAAWA,EAAE,GAAKA,EAAE,OAC3D,KAqDJ,OAlDIX,KAAKpB,MAAMgC,QACbJ,EACE,oEAA0CR,KAAKpB,MAAMgC,MAAMC,UAI7DL,EADER,KAAKpB,MAAMkC,QACI,kBAACC,EAAA,EAAD,MAEAN,EACbA,EAAoBlB,KAAI,SAACyB,EAAQvB,GAC/B,IAAMwB,EAAc7B,OAAOC,KAAK2B,GAAQ,GAClCE,EAAoBF,EAAOC,GAAa3B,YAC9C,OACE,kBAAC,WAAD,CAAUG,IAAKA,GACb,kBAAC,EAAD,CACEG,MAAOuB,YAAeD,GACtBjC,MAAOgC,EACP3B,YAAa4B,IAEf,yBAAKrC,UAAWC,IAAQsC,kBACtB,4BACEvC,UAAWC,IAAQuC,cACnBC,QAAS,kBACP,EAAKC,mBACHL,EACAC,YAAeD,MALrB,uBAWA,4BACErC,UAAWC,IAAQuC,cACnBC,QAAS,kBACP,EAAKE,wBACHN,EACAC,YAAeD,MALrB,yBAWA,kCAKR,KAIJ,oCACE,6BAAMV,Q,GA7EeiB,aAmGdC,uBAhBS,SAACC,GACvB,MAAO,CACL1B,QAAS0B,EAAMnB,eAAeP,QAC9Ba,QAASa,EAAMnB,eAAeM,QAC9BF,MAAOe,EAAMnB,eAAeI,UAIL,SAACgB,GAC1B,MAAO,CACL1B,sBAAuB,kBAAM0B,EAASC,QACtC1B,eAAgB,kBAAMyB,EAASC,QAC/BzB,oBAAqB,SAACZ,EAAKI,GAAN,OACnBgC,EAASC,IAAuBrC,EAAKI,QAG5B8B,CAGbI,YAAW/B","file":"static/js/5.8600a834.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1PfOcJWMSKGMKE4dO_1XxR\",\"ingredient_box\":\"_2XEJyJXKQ_IEHaBSjPf_45\",\"ingredient_div\":\"_1fogDKi7w0B9sSoErQhc-7\",\"ingredient_div_label\":\"_3XGy7LFIcMs7qSVwVIeuRr\",\"preview_burger\":\"_37yqn9EuK1bu9V_Hu4a8kE\",\"burger_name\":\"drZWBUd-JLXfqOjNWgYCS\",\"burger_price_label\":\"kqKKDmQLtgv8tyuLlugNu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProceedButton\":\"PuHRSqOnEjy7qzPc0jIpr\",\"proceedButtonDiv\":\"_1HN31dYbLTjmJliN_jb25Y\"};","import React from \"react\";\r\nimport classes from \"./PremadeBurger.css\";\r\nimport Burger from \"../Burger/Burger\";\r\n\r\nfunction PremadeBurger(props) {\r\n  return (\r\n    <div className={classes.container}>\r\n      <h2 className={classes.burger_name}>{props.title}</h2>\r\n\r\n      <div className={classes.ingredient_div}>\r\n        <span className={classes.ingredient_div_label}>Ingredients: </span>\r\n        {Object.keys(props.ingredients).map((ing, key) =>\r\n          props.ingredients[ing] !== 0 ? (\r\n            <span className={classes.ingredient_box} key={key}>\r\n              {ing} ({props.ingredients[ing]})\r\n            </span>\r\n          ) : null\r\n        )}\r\n        <h3 className={classes.burger_price_label}>\r\n          Price: <strong>${props.price}</strong>\r\n        </h3>\r\n      </div>\r\n      <div className={classes.preview_burger}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PremadeBurger;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport PremadeBurger from \"../../components/PremadeBurger/PremadeBurger\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { withRouter } from \"react-router\";\r\nimport { getBurgerPrice } from \"../../shared/utils\";\r\n\r\nimport classes from \"./PremadeBurgers.css\";\r\n\r\nclass PremadeBurgers extends Component {\r\n  componentDidMount() {\r\n    if (!this.props.burgers) this.props.onFetchPremadeBurgers();\r\n  }\r\n\r\n  continueToCheckout(ing, price) {\r\n    this.props.onInitPurchase();\r\n    this.props.onProceedToCheckout(ing, price);\r\n    this.props.history.push(\"/checkout\");\r\n  }\r\n  continueToBurgerBuilder(ing, price) {\r\n    this.props.onProceedToCheckout(ing, price);\r\n    this.props.history.push(\"/\");\r\n  }\r\n  render() {\r\n    if (!this.props.burgers) {\r\n      setTimeout(() => {\r\n        this.props.onFetchPremadeBurgers();\r\n      }, 600000);\r\n    }\r\n    const premadeBurgersArray = this.props.burgers\r\n      ? Object.entries(this.props.burgers).map((e) => ({ [e[0]]: e[1] }))\r\n      : null;\r\n\r\n    let premadeBurgers;\r\n    if (this.props.error) {\r\n      premadeBurgers = (\r\n        <h1>Can not load premade burgers because {this.props.error.message}</h1>\r\n      );\r\n    }\r\n    if (this.props.loading) {\r\n      premadeBurgers = <Spinner />;\r\n    } else {\r\n      premadeBurgers = premadeBurgersArray\r\n        ? premadeBurgersArray.map((burger, key) => {\r\n            const burgerTitle = Object.keys(burger)[0];\r\n            const burgerIngredients = burger[burgerTitle].ingredients;\r\n            return (\r\n              <Fragment key={key}>\r\n                <PremadeBurger\r\n                  price={getBurgerPrice(burgerIngredients)}\r\n                  title={burgerTitle}\r\n                  ingredients={burgerIngredients}\r\n                />\r\n                <div className={classes.proceedButtonDiv}>\r\n                  <button\r\n                    className={classes.ProceedButton}\r\n                    onClick={() =>\r\n                      this.continueToCheckout(\r\n                        burgerIngredients,\r\n                        getBurgerPrice(burgerIngredients)\r\n                      )\r\n                    }\r\n                  >\r\n                    Proceed To Checkout\r\n                  </button>\r\n                  <button\r\n                    className={classes.ProceedButton}\r\n                    onClick={() =>\r\n                      this.continueToBurgerBuilder(\r\n                        burgerIngredients,\r\n                        getBurgerPrice(burgerIngredients)\r\n                      )\r\n                    }\r\n                  >\r\n                    Edit on BurgerBuilder\r\n                  </button>\r\n                  <hr />\r\n                </div>\r\n              </Fragment>\r\n            );\r\n          })\r\n        : null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div>{premadeBurgers}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    burgers: state.premadeBurgers.burgers,\r\n    loading: state.premadeBurgers.loading,\r\n    error: state.premadeBurgers.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchPremadeBurgers: () => dispatch(actions.fetchPremadeBurgers()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onProceedToCheckout: (ing, price) =>\r\n      dispatch(actions.setIngredients(ing, price)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(PremadeBurgers));\r\n"],"sourceRoot":""}